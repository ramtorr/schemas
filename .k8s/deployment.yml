---
  apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    labels:
      app.kubernetes.io/name: web-opencerta-schemas
    name: web-opencerta-schemas
  spec:
    rules:
      - host: schema.opencerta.org
        http:
          paths:
            - path: /
              backend:
                serviceName: web-opencerta-schemas
                servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: web-opencerta-schemas
  name: web-opencerta-schemas
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: web-opencerta-schemas
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: web-opencerta-schemas
  name: web-opencerta-schemas
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: web-opencerta-schemas
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web-opencerta-schemas
    spec:
      containers:
        - name: web-opencerta-schemas
          image: docker.magnacerta.io/opencerta/schemas-jsonld:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: ["NET_ADMIN", "SYS_TIME"]
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: docker-magnacerta-com
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
      terminationGracePeriodSeconds: 30
